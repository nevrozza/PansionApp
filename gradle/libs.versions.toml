[versions]
# Plugins
coil = "3.1.0"
excelkt = "1.0.2"
mpfilepicker = "3.1.0"
plugin-android = "8.5.2"
plugin-compose = "1.7.3"#1.8.0-alpha02

# Multiplatform
kotlin = "2.1.0"
coroutines = "1.10.1"
serialization = "1.7.3"
datetime = "0.6.2"
ktor = "3.0.3"
#ktor = "2.3.10"


# Libraries
sqldelight = "2.0.2"
settings = "1.3.0"
di = "7.25.0"
decompose = "3.3.0"
mvikotlin = "4.3.0" #"3.3.0" #4.0.0-alpha02
moko = "0.24.0-alpha-4"

# Compose Libraries
haze = "1.5.0"
materialKolor = "2.0.2"

# Android
androidx-compose = "1.7.0-alpha01"
androidx-compiler = "1.5.14"
androidx-material3 = "1.3.0-beta03"
androidx-activityCompose = "1.9.0"
androidx-appCompat = "1.7.0"

[libraries]
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }

excelkt = { module = "io.github.evanrupert:excelkt", version.ref = "excelkt" }
mpfilepicker = { module = "com.darkrockstudios:mpfilepicker", version.ref = "mpfilepicker" }

plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-android = { module = "com.android.tools.build:gradle", version.ref = "plugin-android" }
plugin-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "plugin-compose" }
plugin-compose-compiler = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
plugin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

#sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-js-driver = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqldelight" }

settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }

kodein-di = { module = "org.kodein.di:kodein-di", version.ref = "di" }

compose-materialKolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
compose-haze-core = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
compose-haze-materials = { module = "dev.chrisbanes.haze:haze-materials", version.ref = "haze" }

jetbrains-compose-splitpane = { module = "org.jetbrains.compose.components:components-splitpane", version.ref = "plugin-compose" }

androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "androidx-compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }
androidx-compose-material = { module = "androidx.compose.material3:material3", version.ref = "androidx-compose" }
androidx-compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-compose-icons = { module = "androidx.compose.material:material-icons-core", version.ref = "androidx-compose" }


androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appCompat" }
androidx-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

mvikotlin-core = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
mvikotlin-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }

[plugins]
android = { id = "com.android.application", version.ref = "plugin-android" }
kotlin = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-plugin = { id = "org.jetbrains.compose", version.ref = "plugin-compose" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }